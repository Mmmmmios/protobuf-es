// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.8.0 with parameter "ts_nocheck=false,target=ts"
// @generated from file extra/edition2023-proto2.proto (package spec, syntax proto2)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";

/**
 * @generated from enum spec.Proto2EnumForEdition2023
 */
export enum Proto2EnumForEdition2023 {
  /**
   * @generated from enum value: PROTO2_ENUM_FOR_EDITION2023_A = 1;
   */
  A = 1,
}
// Retrieve enum metadata with: proto2.getEnumType(Proto2EnumForEdition2023)
proto2.util.setEnumType(Proto2EnumForEdition2023, "spec.Proto2EnumForEdition2023", [
  { no: 1, name: "PROTO2_ENUM_FOR_EDITION2023_A" },
]);

/**
 * see edition2023.proto
 *
 * @generated from message spec.Proto2MessageForEdition2023
 */
export class Proto2MessageForEdition2023 extends Message<Proto2MessageForEdition2023> {
  /**
   * @generated from field: optional bool optional_bool_field = 1;
   */
  declare optionalBoolField: boolean;

  /**
   * @generated from field: optional spec.Proto2EnumForEdition2023 optional_closed_enum_field = 2;
   */
  declare optionalClosedEnumField: Proto2EnumForEdition2023;

  /**
   * @generated from field: optional string optional_string_field_with_default = 3 [default = ""];
   */
  declare optionalStringFieldWithDefault: string;

  /**
   * @generated from field: optional spec.Proto2MessageForEdition2023.OptionalGroup optionalgroup = 4;
   */
  optionalgroup?: Proto2MessageForEdition2023_OptionalGroup;

  /**
   * @generated from field: required bool required_bool_field = 5;
   */
  declare requiredBoolField: boolean;

  /**
   * @generated from field: required spec.Proto2EnumForEdition2023 required_closed_enum_field = 6;
   */
  declare requiredClosedEnumField: Proto2EnumForEdition2023;

  /**
   * @generated from field: required string required_string_field_with_default = 7 [default = "hello \" *\/ "];
   */
  declare requiredStringFieldWithDefault: string;

  /**
   * @generated from field: required spec.Proto2MessageForEdition2023.RequiredGroup requiredgroup = 8;
   */
  requiredgroup?: Proto2MessageForEdition2023_RequiredGroup;

  /**
   * @generated from field: repeated double packed_double_field = 9 [packed = true];
   */
  packedDoubleField: number[] = [];

  /**
   * @generated from field: repeated double unpacked_double_field = 10 [packed = false];
   */
  unpackedDoubleField: number[] = [];

  constructor(data?: PartialMessage<Proto2MessageForEdition2023>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "spec.Proto2MessageForEdition2023";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "optional_bool_field", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "optional_closed_enum_field", kind: "enum", T: proto2.getEnumType(Proto2EnumForEdition2023), opt: true },
    { no: 3, name: "optional_string_field_with_default", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "" },
    { no: 4, name: "optionalgroup", kind: "message", T: Proto2MessageForEdition2023_OptionalGroup, delimited: true, opt: true },
    { no: 5, name: "required_bool_field", kind: "scalar", T: 8 /* ScalarType.BOOL */, req: true },
    { no: 6, name: "required_closed_enum_field", kind: "enum", T: proto2.getEnumType(Proto2EnumForEdition2023), req: true },
    { no: 7, name: "required_string_field_with_default", kind: "scalar", T: 9 /* ScalarType.STRING */, req: true, default: "hello \" */ " },
    { no: 8, name: "requiredgroup", kind: "message", T: Proto2MessageForEdition2023_RequiredGroup, delimited: true, req: true },
    { no: 9, name: "packed_double_field", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true, packed: true },
    { no: 10, name: "unpacked_double_field", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proto2MessageForEdition2023 {
    return new Proto2MessageForEdition2023().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proto2MessageForEdition2023 {
    return new Proto2MessageForEdition2023().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proto2MessageForEdition2023 {
    return new Proto2MessageForEdition2023().fromJsonString(jsonString, options);
  }

  static equals(a: Proto2MessageForEdition2023 | PlainMessage<Proto2MessageForEdition2023> | undefined, b: Proto2MessageForEdition2023 | PlainMessage<Proto2MessageForEdition2023> | undefined): boolean {
    return proto2.util.equals(Proto2MessageForEdition2023, a, b);
  }
}

Proto2MessageForEdition2023.prototype.optionalBoolField = false;
Proto2MessageForEdition2023.prototype.optionalClosedEnumField = 1 as Proto2EnumForEdition2023.A;
Proto2MessageForEdition2023.prototype.optionalStringFieldWithDefault = "";
Proto2MessageForEdition2023.prototype.requiredBoolField = false;
Proto2MessageForEdition2023.prototype.requiredClosedEnumField = 1 as Proto2EnumForEdition2023.A;
Proto2MessageForEdition2023.prototype.requiredStringFieldWithDefault = "hello \" */ ";

/**
 * @generated from message spec.Proto2MessageForEdition2023.OptionalGroup
 */
export class Proto2MessageForEdition2023_OptionalGroup extends Message<Proto2MessageForEdition2023_OptionalGroup> {
  /**
   * @generated from field: optional int32 int32_field = 1;
   */
  declare int32Field: number;

  constructor(data?: PartialMessage<Proto2MessageForEdition2023_OptionalGroup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "spec.Proto2MessageForEdition2023.OptionalGroup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "int32_field", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proto2MessageForEdition2023_OptionalGroup {
    return new Proto2MessageForEdition2023_OptionalGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proto2MessageForEdition2023_OptionalGroup {
    return new Proto2MessageForEdition2023_OptionalGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proto2MessageForEdition2023_OptionalGroup {
    return new Proto2MessageForEdition2023_OptionalGroup().fromJsonString(jsonString, options);
  }

  static equals(a: Proto2MessageForEdition2023_OptionalGroup | PlainMessage<Proto2MessageForEdition2023_OptionalGroup> | undefined, b: Proto2MessageForEdition2023_OptionalGroup | PlainMessage<Proto2MessageForEdition2023_OptionalGroup> | undefined): boolean {
    return proto2.util.equals(Proto2MessageForEdition2023_OptionalGroup, a, b);
  }
}

Proto2MessageForEdition2023_OptionalGroup.prototype.int32Field = 0;

/**
 * @generated from message spec.Proto2MessageForEdition2023.RequiredGroup
 */
export class Proto2MessageForEdition2023_RequiredGroup extends Message<Proto2MessageForEdition2023_RequiredGroup> {
  /**
   * @generated from field: optional int32 int32_field = 1;
   */
  declare int32Field: number;

  constructor(data?: PartialMessage<Proto2MessageForEdition2023_RequiredGroup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "spec.Proto2MessageForEdition2023.RequiredGroup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "int32_field", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proto2MessageForEdition2023_RequiredGroup {
    return new Proto2MessageForEdition2023_RequiredGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proto2MessageForEdition2023_RequiredGroup {
    return new Proto2MessageForEdition2023_RequiredGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proto2MessageForEdition2023_RequiredGroup {
    return new Proto2MessageForEdition2023_RequiredGroup().fromJsonString(jsonString, options);
  }

  static equals(a: Proto2MessageForEdition2023_RequiredGroup | PlainMessage<Proto2MessageForEdition2023_RequiredGroup> | undefined, b: Proto2MessageForEdition2023_RequiredGroup | PlainMessage<Proto2MessageForEdition2023_RequiredGroup> | undefined): boolean {
    return proto2.util.equals(Proto2MessageForEdition2023_RequiredGroup, a, b);
  }
}

Proto2MessageForEdition2023_RequiredGroup.prototype.int32Field = 0;

